day23 dbms 5일차

복습 -> 이상현상 -> 정규화 -> DML2 -> GROUP BY -> JOIN -> SUB QUERY

================================================================================================
0. 복습

1) 데이터의 무결성
 정확성 : 데이터는 애매하지 않아야함.(색상)
 일관성 : 각 사용자가 일관된 데이터를 확인할수있어야함(은행)
 유효성 : 실제로 존재하는 데이터여야한다.
2) 무결성의 종류
 개체 무결성 : 모든 테이블이 기본키(Primary Key)를 가져야한다.
 참조 무결성 : 두 테이블의 데이터가 항상 일관된 값을 갖도록 유지하는 것을 의미한다.
 도메인 무결성 : 컬럼(속성)의 타입, NULL 허용 등의 사항을 정의하는 것을 의미, 올바른 데이터가 입력되었는지 확인.
3) 키(KEY)
 데이터베이스 내의 레코드(행)를 고유하게 식별하거나 검색하는데 사용되는 하나 이상의 속성의 조합.
 모델링에서와 테이블에서 용어가 다르다.
	모델링 => 식별자 => 기본키, 외래키, 후보키, 대체키, 슈퍼키
	테이블 => 키 => 기본키, 외래키, 조합키
4) 키의 종류
- 기본키(Primary Key)
	테이블 내의 각 행을 고유하게 식별하는데 사용
	중복 불가, NULL 불가
- 외래키(Foreign Key)
	두 테이블 간의 관계를 설정하고 데이터의 무결성을 유지한다.
- 조합키(복합키)
	두 개 이상의 컬럼을 하나의 key로 지정하는 것을 의미.
	모든 테이블은 하나의 PK만 존재하지만, 
	조합키를 사용해서 두 개 이상의 컬럼을 하나의 PK로 사용할 수 있다.
- 후보키(Candidate Key)
	기본키가 될 수 있는 후보들. 최소성과 유효성을 만족
- 대체키(Alternate Key)
	후보키에서 기본키가 되지 못한 키들. 
- 슈퍼키(Super Key)
	레코드를 고유하게 식별하기 위한 속성 또는 속성의 조합
	슈퍼키는 후보키와 대체키의 상위 키.
5) 제약조건
- Primary Key(PK)
	고유한 값이며 각 행의 구분점으로 사용된다.
	중복 불가, NULL 값 불가
- Foreign Key(FK)
	다른 테이블의 PK를 사용하며, 중복 가능하다.
	보통 테이블끼리 관계를 맺을 때 사용한다.(참조무결성)
	NULL 값 허용.
- Unique Key(UK)
	해당 컬럼에서 중복값이 없는 고유값으로 사용한다.
	NULL 값 허용.
- CHECK(CHK)
	컬럼의 값이 특정 조건을 만족해야한다.(값의 범위나 조건 사용)
- NOT NULL(NN, N/N)
	해당 컬럼의 값은 NULL 값 허용하지 않는다.
- DEFAULT
	해당 컬럼의 값이 입력되지 않을 경우에, 기본값으로 자동 입력된다.
	디폴트를 지정하지 않을 경우 NULL 값이 자동으로 사용된다.

6) 모델링
	현실세계의 복잡한 현상을 일정한 형식으로 명확하게 표현하기 위해서 추상화(ABSTRACTION)를 통해서 단순화하는 과정.
	현실세계 --- 모델링 ---> 모델(MODEL)
		   단순화
		   추상화(형상화)
		   명료화
 - 모델링은 단순화를 목적으로 한다. : 복잡한 현실세계 현상을 이해하기 쉽게 요약해서 표현하는 기법.
 - 모델링은 명료화를 목적으로 한다. : 복잡한 현실세계 현상을 누구나 이해하기 쉽게 애매모호함을 제거하고 분명하고 또렷하게 표현하는 기법.
 - 모델링은 추상화를 목적으로 한다. : 복잡한 현실세계 현상을 이해하기 쉽게 설명하기 위해 중요한 특징을 찾아내서 구체적인 모양과 모습으로 형상화 하는 기법.

 모델링 행위는 모델링 대상의 엔티티와 모델링을 수행하는 주체(SUBJECT)로 구분할 수 있다.
 엔티티 : 사람들의 관심이 되는 것, 업무에 꼭 필요로 하는 것들을 의미.(테이블)
 모델링의 주체(SUBJECT) : 모델링을 수행하는 사람 모델러(MODELLER)

7) 모델링 단계
요구사항 분석 	
-> 	
개념적 모델링 	
-> 엔티티를 사람이 이해할 수 있는 개념 세계의 정보 구조로 추상화하는 단계
논리적 모델링 	
-> 실질적인 데이터 모델링에 해당함. 개념세계의 정보 구조를 정보시스템이 이해할 수 있는 형태로 표현하는 단계
물리적 모델링 	
-> 정보시스템 세계의 논리적 구조를 정보시스템이 처리할 수 있는 형태로 구조화하는 단계. 구조화된 결과는 데이터 스키마로 표현됨.
구현 

================================================================================================
+) DDL, DML
DDL : 데이터 정의어
삭제	DROP TABLE 테이블명;
생성	CREATE TABLE 테이블명(컬럼명 자료형(용량), 제약조건);	
수정	ALTER TABLE 테이블명 RENAME TO 새로운테이블명;
	ALTER TABLE 테이블명 RENAME 기존컬럼명 TO 새로운컬럼명;
	ALTER TABLE 테이블명 ADD (새로운컬럼명 자료형(용량));
	ALTER TABLE 테이블명 MODIFY(기존컬럼명 자료형(용량));
	ALTER TABLE DROP COLUMN 기존컬럼명;
	ADD CONSTRAINT 제약조건이름 PRIMARY KEY(현재테이블의 컬럼명);
	ADD CONSTRAINT 제약조건이름 FOREIGN KEY(현재테이블의 컬럼명) REFERENCES 상위테이블(컬럼명);
	DROP CONSTRAINT 제약조건이름;

	TRUNCATE TABLE 테이블명;

DML : 데이터 조작어
삽입	INSERT		INSERT INTO (컬럼명...)
			VALUES(값1, ...);
			INSERT INTO 테이블명
			VALUES(값1, 값2);

조회	SELECT		SELECT [DISTRICT] 컬럼명 [AS 별칭]
			FROM 테이블명
			WHERE 조건식;
			ORDER BY ASC / DESC;
삭제	DELETE		DELETE FROM 테이블명 
			WHERE 조건식;
			
수정	UPDATE		UPDATE 테이블명 
			SET 컬럼명 = 값;
			WHERE 조건식;

================================================================================================

1. 이상현상(anomaly)
   DDL, DML 개념이 있어야한다
   테이블에 컬럼을 무엇을 넣어야할 지, 하나의 테이블을 두개로 분리할 지 고민하는 작업

   무결성의 특징 : 일관성, 유효성, 정확성을 지켜도 정규화를 하지 않으면 나중에 테이블간 문제가 발생할 수 있다
   1차~6차 정규화까지 분리하여 진행한다. 보통은 3차까지만 진행을 한다.

   
1) 데이터베이스에서 정규화가 필요한 이유
   데이터베이스를 잘못 설계하면 불필요한 데이터 중복으로 인해 공간이 낭비된다.
   이러한 현상을 이상(Anomaly)현상이라고 한다.

2) 이상현상 : 데이터 베이스 설계가 잘못되어 발생하는 문제

   직원
   ===================================================================
   사원번호(pk)   		이름   	생년월일       부서정보         	 급여
   1      		홍길동   2010-12-11   영업부, 서울시..12312   300
   2      		강감찬   2011-02-04   개발부, 서울시..02322   240
   3      		신짱구   2018-01-04   보안부, 서울시..01111   230
   4      		신짱아   2009-05-09   영업부, 서울시..01234   220
   5      		홍길동   2010-12-11   영업부, 서울시..12312   500
   ===================================================================

	
3) 이상현상의 종류

 - 삽입이상(INSERTION ANOMALY)
	새로운 부서를 삽입하려고 할 때, 해당 부서에 소속된 직원의 사원번호(PK)가 없으면 삽입이상. 
	새로운 데이터를 삽입하기 위해 불필요한 데이터도 같이 삽입해야하는 문제.
	마케팅부, 서울시..02322 를 추가하려 할때, 소속된 직원이 없어서 추가하지 못하는 문제가 발생함.
	또는, 임의로 직원을 채워넣어야하는 문제가 발생.(불필요한 데이터)
 - 갱신이상(UPDATE ANOMALY)
	중복된 행 중에서 일부만 변경해서 데이터가 불일치하는 모순의 문제를 뜻한다.
	영업부, 서울시..12312 같은 부서정보가 여러번 반복되어 저장이 되고있다.
	이름이 같은 홍길동(사원번호 1, 5)이 있는데, 동명이인인지, 중복인지 판단이 불가능한 상황.(PK만으로는 확인불가)
	영업부, 서울시..12312와 영업부, 서울시 01234 2개의 주소가 들어있어서, 어느것이 정확한 영업부의 부서정보인지 판단 불가능.
 - 삭제이상(DELETION ANOMALY)
	행을 삭제했을 때, 필요한 데이터도 같이 삭제되는 문제를 뜻한다.
	특정 직원을 삭제하면, 부서가 같이 사라지는 문제도 발생할 수 있음.
	강감찬이라는 사람이 퇴사를 해서 삭제를 했는데,
	개발부, 서울시..02322 라는 부서정보도 같이 사라져버리는 삭제이상이 발생함.
	다른 사람이 같은 부서에 없는 경우라면 정보 손실이 발생한다. 이를 삭제이상이라고 한다.
   
	회원번호   이름   부서   프로젝트코드      급여   부서별 명수
	1111   홍길동   개발팀   ABC0001      3000   4
	1111   홍길동   개발팀   DEF1112      2000   4
	1111   홍길동   개발팀   CBA9497      4000   4
	3333   이유리   기획팀   EFG0881      5000   2
	4444   박웅이   디자인팀  GHI9991      6000   3

 삽입이상 => 담당 프로젝트가 정해지지 않은 사원이 있다면 프로젝트 코드에 NULL을 작성할 수 없으므로, 이 테이블에 추가될 수 없다.
		'미정'이라는 프로젝트 코드를 따로 만들어서 삽입해야한다.
 갱신이상 => 홍길동이 3명이고 부서까지 같은데, 홍길동을 보안팀으로 갱신하려한다면 모두 갱신해야하지만 실수로 어떤것은 변경하지 않을경우 갱신이상이 발생.
		한명의 사원은 반드시 하나의 부서에만 속할 수 있다.
		만약 홍길동이라는 사원이 보안팀으로 부서를 옮길 시 3개 모두 갱신해주지 않는다면, 개발팀인지 보안팀인지 알 수 없다.
 삭제이상 => 박웅이 사원이 담당한 프로젝트인 GHI9991라는 프로젝트코드를 삭제하려할때 박웅이 행을 모두 삭제한다. 
		프로젝트를 드랍하면 모든 행의 정보를 드랍하기 때문에 다른 정보까지 삭제되는 삭제이상이 발생한다. 

4) 함수적 종속성
	이러한 이상현상을 예방하고자 정규화를 진행한다.
	정규화를 진행하기 위하여 각 컬럼간의 관련성을 파악한다.
	이 관련성을 함수적 종속성(FUNCTIONAL DEPENDENCY)이라고 한다.
	따라서 하나의 테이블에서는 반드시 하나의 함수적 종속성만 가지도록 정규화를 해야한다.
	y = 2x라는 함수가 있을때 x가 무엇이냐에 따라 y가 결정된다.
	x를 결정자, y는 종속자라고 표현한다.
	이를 x -> y 로 표현한다.
	x의 값이 1일때 y는 2가 반드시 나오는데, 이렇게 x값에 대한 y값이 항상 하나인 경우를 함수의 종속이라고 한다.
	
	생일과 나이라는 두개의 컬럼의 관계를 찾는다.
	생일(010929)을 알면 -> 나이(25세)를 안다. [생일:결정자 / 나이:종속자] => 나이 컬럼은 생일 컬럼에 함수 종속이다.
================================================================================================
2. 정규화(Normalization)

삽입 / 삭제 / 갱신 이상현상을 제거하기 위한 작업을 의미함.
데이터의 중복을 최소화하는데 목적이 있다.
6차 정규화까지 있으나, 3차 정규화까지만 진행한다.

1차 정규화(1NF-FIRST NORMAL FORM)
	각 열은 원자값(단일값)을 갖도록 분해하여 중복을 제거한다. => 부서정보는 단일값이 아닌 두개의 값을 가짐.
=> 반복되는 그룹을 별도의 테이블로 분리해야한다.(1차 정규화가 필요한 경우이다.)

   직원
   ===================================================================
   사원번호(pk)   		이름   	생년월일       부서정보         	 급여
   1      		홍길동   2010-12-11   영업부, 서울시..12312   300
   2      		강감찬   2011-02-04   개발부, 서울시..02322   240
   3      		신짱구   2018-01-04   보안부, 서울시..01111   230
   4      		신짱아   2009-05-09   영업부, 서울시..01234   220
   5      		홍길동   2010-12-11   영업부, 서울시..12312   500
   ===================================================================

   직원
   ===================================================================
   사원번호(pk)   		이름   	생년월일       부서명  부서정보     	 급여
   1      		홍길동   2010-12-11   영업부  서울시..12312   300
   2      		강감찬   2011-02-04   개발부  서울시..02322   240
   3      		신짱구   2018-01-04   보안부  서울시..01111   230
   4      		신짱아   2009-05-09   영업부  서울시..01234   220
   5      		홍길동   2010-12-11   영업부  서울시..12312   500
   ===================================================================

   직원
   ===================================================================
   사원번호(pk)   		이름   	생년월일          급여	부서번호(FK)
   1      		홍길동   2010-12-11      300	1
   2      		강감찬   2011-02-04      240	2
   3      		신짱구   2018-01-04      230	2
   4      		신짱아   2009-05-09      220	3
   5      		홍길동   2010-12-11      500	3
   ===================================================================
   
   부서
   ===================================================================

   ===================================================================


2차 정규화
	1차 정규화(테이블의 값은 단일값)를 만족해야한다.
	기본키가 복합키일 경우, 부분함수 종속을 제거한다.

 과자
   이름(PK)   맛(PK)   가격   제조사
   포카칩   기본맛   2200   오리온
   포카칩    어니언맛   2200   오리온
   포테토칩   오리지널   2300   농심
   포테토칩   어니언맛   2500   농심

   이름만 알아도 제조사를 알 수 있다
   조합키를 제회한 가격과 제조사 컬럼을 본다
   가격 컬럼은 이름, 맛 알아야만 확인할 수 있다
   제조사 컬럼은 이름만 알아도 확인할 수 있다
   => 조합키의 일부분에만 종속된다

   과자
   이름PK   맛PK   가격
   포카칩   기본맛   2200
   포카칩    어니언맛   2200
   포테토칩   오리지널   2300
   포테토칩   어니언맛   2500   

   제조사
   이름PK   제조사
   포카칩   오리온
   포테토칩   농심


   직원
   ===================================================================
   사원번호(pk)   이름      생년월일       급여   부서번호
   1         홍길동   2010-12-11       300   100
   2         강감찬   2011-02-04       240   200
   4         신짱아   2009-05-09       220   100   
   5         홍길동   2010-12-11       500   300

   부서
   ====================================================================
   부서번호(pk)   부서명   부서주소
   100      영업부   서울시 강남구   12345
   200      개발부   서울시 송파구   23455
   300      보안부   서울시 동작구   56789

3차 정규화
	이행적 함수를 제거하여 테이블을 분해한다.
	다른 컬럼(비주요컬럼)이 기본키가 아닌 컬럼에 종속되는 경우 해당 컬럼들이 새로운 테이블로 분리되며 관계를 정리한다.
	
	X->Y->A
	X->A
	이행적 관계

	회원번호PK    이름	   시	  구	  동     우편번호
  	1      	   홍길동   서울시   강남구   역삼동   12345   
  	2      	   춘향이   부산시   부산구   부산동   55555
   ===================================================================  
   회원번호   	이름    우편번호
   1   		홍길동   12345
   2   		춘향이   55555
   ===================================================================
   우편번호   시   구   동
   12345   서울시   강남구   역삼동
   55555   부산시   부산구   부산동


   직원
   ===================================================================
   사원번호(pk)   이름     생년월일       	급여   부서번호
   1         	홍길동   2010-12-11   	300   100
   2         	강감찬   2011-02-04   	240   200
                        
   4         	신짱아   2009-05-09     	220   100   
   5         	홍길동   2010-12-11      	500   300

   부서
   ====================================================================
   부서번호(pk)   부서명   우편번호(fk)
   100      영업부   12345
   200      개발부   23455
   300      보안부   56789


   주소
   ====================================================================
   우편번호(pk)   주소
   12345      서울시 강남구
   23455      서울시 송파구
   56789      서울시 동작구

================================================================================================

3. DML2
SELECT
INSERT
UPDATE
DELETE






























================================================================================================